{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Goose-Track",
    "description": "[**Goose-Track**](https://malakhow-alexandr.github.io/Team-Project-Organaizer-Goose-Track/) is an intuitive calendar app that helps you stay organized and on top of your tasks.</br></br>With **Goose-Track**, you can effortlessly _`create`_, _`update`_, and _`delete`_ tasks, as well as _`retrieve tasks for a specific month`_. Additionally, you can personalize your profile by _`updating`_ your information and _`uploading`_ an avatar.</br></br>One of the standout features of **Goose-Track** is the ability for users to _`leave feedback`_ about the app. Whether it's sharing thoughts, suggesting improvements, or expressing appreciation, users can provide valuable insights through their feedback, helping to shape the future development of the app.</br></br>So, go ahead and start using **Goose-Track API** to enhance your calendar experience, organize your schedule, manage your tasks, and stay on top of your commitments. With its user-friendly interface and powerful features, the **Goose-Track API** enables you to make the most of your calendar application and keep track of your busy life. Start using this [application](https://malakhow-alexandr.github.io/Team-Project-Organaizer-Goose-Track/) right away or customize your own integration with this API happily!</br></br>You can also visit the [repository](https://github.com/Siryi-Oleksandr/goose-track-backend) of this application for more detailed information.</br></br>"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],

  "servers": [
    { "url": "http://localhost:3001" },
    {
      "url": "https://goose-track-verq.onrender.com/"
    }
  ],

  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },

    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    },

    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    }
  ],

  "paths": {
    "/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unprocessableResponse"
                }
              }
            }
          }
        }
      }
    },

    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unprocessableResponse"
                }
              }
            }
          }
        }
      }
    },

    "/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Token refresh",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Token refresh object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unprocessableResponse"
                }
              }
            }
          }
        }
      }
    },

    "/changePassword": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Changes the password",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Password change object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/changePassRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/changePassResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unprocessableResponse"
                }
              }
            }
          }
        }
      }
    },

    "/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user info",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User info and avatar upload",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unprocessableResponse"
                }
              }
            }
          }
        }
      }
    },

    "/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Retrieves an info about current user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Successful operation",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          }
        }
      }
    },

    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Returns a list of all tasks by parameters.",
        "parameters": [
          {
            "in": "query",
            "name": "day",
            "required": false,
            "type": "string",
            "description": "The date on which to return the tasks. Format: YYYY-MM-DD"
          },
          {
            "in": "query",
            "name": "month",
            "required": false,
            "type": "string",
            "description": "Any date of the month for which tasks must be returned. Format: YYYY-MM-DD"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/tasks/statistics": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Returns a object of the statistics all tasks by category per day and month.",
        "parameters": [
          {
            "in": "query",
            "name": "day",
            "required": false,
            "type": "string",
            "description": "The date on which to return object of the statistics all tasks by category per day and month. Format: YYYY-MM-DD"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statisticsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          }
        }
      }
    },

    "/tasks/:taskId": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get task by ID",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeletePatchTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unable to find Task",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Change tasks",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Tasks's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeletePatchTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unable to find Task",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeletePatchTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unable to find Task",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },

    "/tasks/category/:taskId": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Updates an existing task.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/tasks/:taskId:{patch{}}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Updates an existing task.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Deleted successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/tasks/:taskId:{delete{}}": {
      "delete": {
        "tags": ["Tasks"],
        "summary": "Updates an existing task.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Deleted successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Returns a list of all reviews.",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "example": 10,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "page",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      },
      "/reviews/own": {
        "tags": ["Reviews"],
        "summary": "Create a Review.",
        "parameters": [
          {
            "in": "query",
            "name": "rating",
            "example": 10,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "text",
            "example": "Make a bill",
            "schema": {
              "type": "String"
            }
          },
          {
            "in": "query",
            "name": "date",
            "example": "27.06.2023",
            "schema": {
              "type": "String"
            }
          },
          {
            "in": "query",
            "name": "owner",
            "example": "Bill Gates",
            "schema": {
              "type": "String"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/own": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Returns a list of all current user reviews.",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "example": 10,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "page",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/own:{patch:{}}": {
      "patch": {
        "tags": ["Reviews"],
        "summary": "Returns a review by specific ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getOneReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "registrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex Doe"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },

      "registrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "created"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "example": "1346464sdasd48464asd..."
              },
              "refreshToken": {
                "type": "string",
                "example": "89652ddsdahh48984abn..."
              },
              "user": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Alex Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "example@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": ""
                  },
                  "skype": {
                    "type": "string",
                    "example": ""
                  },
                  "birthday": {
                    "type": "string",
                    "example": ""
                  },
                  "avatarURL": {
                    "type": "string",
                    "example": "//www.gravatar.com/avatar/f17f20f3bbc4bf95af0e9ee8d3211033?s=250"
                  }
                }
              }
            }
          }
        }
      },

      "loginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },

      "loginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "example": "1346464sdasd48464asd..."
              },
              "refreshToken": {
                "type": "string",
                "example": "89652ddsdahh48984abn..."
              },
              "user": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Alex Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "example@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": ""
                  },
                  "skype": {
                    "type": "string",
                    "example": ""
                  },
                  "birthday": {
                    "type": "string",
                    "example": ""
                  },
                  "avatarURL": {
                    "type": "string",
                    "example": "//www.gravatar.com/avatar/f17f20f3bbc4bf95af0e9ee8d3211033?s=250"
                  }
                }
              }
            }
          }
        }
      },

      "refreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "89652ddsdahh48984abn..."
          }
        }
      },

      "refreshResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "example": "1346464sdasd48464asd..."
              },
              "refreshToken": {
                "type": "string",
                "example": "89652ddsdahh48984abn..."
              }
            }
          }
        }
      },

      "changePassRequest": {
        "type": "object",
        "required": ["password", "newPassword"],
        "properties": {
          "password": {
            "type": "string",
            "example": "qwerty123"
          },
          "newPassword": {
            "type": "string",
            "example": "123qwerty"
          }
        }
      },

      "changePassResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "password changed successfully"
              }
            }
          }
        }
      },

      "updateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone"
          },
          "skype": {
            "type": "string",
            "description": "User's skype"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday"
          }
        },
        "required": ["name", "email"],
        "example": {
          "name": "Alexander Doe",
          "email": "example@example.com",
          "skype": "+10888888888",
          "phone": "38 (073) 000 00 00",
          "birthday": "24/08/1991"
        }
      },

      "updateUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id"
              },
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "phone": {
                "type": "string",
                "description": "User's phone"
              },
              "skype": {
                "type": "string",
                "description": "User's skype"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday"
              }
            },
            "example": {
              "_id": "6479dbb972171cebb39e9dc4",
              "name": "Alexander Doe",
              "email": "example@example.com",
              "skype": "+10888888888",
              "phone": "38 (073) 000 00 00",
              "birthday": "24/08/1991",
              "avatarUrl": "http://res.cloudinary.com/dsjxdktiz/image/upload/v1688133681/goose-track/iohp56kfliwlgfhyi0qg.jpg"
            }
          }
        }
      },

      "logoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "logout successfull"
              }
            }
          }
        }
      },

      "newTask": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "649db2cc5e53a2e9a8d8b124"
          },
          "title": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high"]
          },
          "category": {
            "type": "string",
            "enum": ["to-do", "in-progress", "done"]
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": { "type": "string" },
              "name": { "type": "string" },
              "email": { "type": "string" },
              "avatarURL": { "type": "string" }
            }
          }
        },
        "example": {
          "_id": "649db2cc5e53a2e9a8d8b124",
          "title": "Task 1",
          "start": "09:00",
          "end": "09:30",
          "date": "2023-06-28",
          "priority": "medium",
          "category": "done",
          "owner": {
            "_id": "6479dbb972171cebb39e9dc4",
            "name": "Alexander Doe",
            "email": "example@example.com",
            "avatarURL": "http://res.cloudinary.com/dsjxdktiz/image/upload/v1688133681/goose-track/iohp56kfliwlgfhyi0qg.jpg"
          }
        }
      },

      "searchTaskResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "649db2cc5e53a2e9a8d8b124"
            },
            "title": {
              "type": "string"
            },
            "start": {
              "type": "string"
            },
            "end": {
              "type": "string"
            },
            "date": {
              "type": "string"
            },
            "priority": {
              "type": "string",
              "enum": ["low", "medium", "high"]
            },
            "category": {
              "type": "string",
              "enum": ["to-do", "in-progress", "done"]
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": { "type": "string" },
                "name": { "type": "string" },
                "email": { "type": "string" },
                "avatarURL": { "type": "string" }
              }
            }
          },
          "example": [
            {
              "_id": "649db2cc5e53a2e9a8d8b124",
              "title": "Task 1",
              "start": "09:00",
              "end": "09:30",
              "date": "2023-06-28",
              "priority": "medium",
              "category": "done",
              "owner": {
                "_id": "6479dbb972171cebb39e9dc4",
                "name": "Alexander Doe",
                "email": "example@example.com",
                "avatarURL": "http://res.cloudinary.com/dsjxdktiz/image/upload/v1688133681/goose-track/iohp56kfliwlgfhyi0qg.jpg"
              }
            },
            {
              "_id": "649d92cbbec56980824ddee1",
              "title": "Task 2",
              "start": "19:00",
              "end": "19:30",
              "date": "2023-06-28",
              "priority": "high",
              "category": "to-do",
              "owner": {
                "_id": "6479dbb972171cebb39e9dc4",
                "name": "Alexander Doe",
                "email": "example@example.com",
                "avatarURL": "http://res.cloudinary.com/dsjxdktiz/image/upload/v1688133681/goose-track/iohp56kfliwlgfhyi0qg.jpg"
              }
            }
          ]
        }
      },

      "statisticsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "statisticsByDay": {
                "type": "object",
                "example": {
                  "todo": 50,
                  "inProgress": 25,
                  "done": 25,
                  "allTasks": 4
                }
              },
              "statisticsByMonth": {
                "type": "object",
                "example": {
                  "todo": 20,
                  "inProgress": 10,
                  "done": 70,
                  "allTasks": 28
                }
              }
            }
          }
        }
      },

      "createTaskRequest": {
        "type": "object",
        "required": [
          "title",
          "start",
          "end",
          "date",
          "priority",
          "category",
          "owner"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of a task.",
            "example": "New Task"
          },
          "start": {
            "type": "string",
            "description": "Start time. In `HH:mm` format.",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "End time. In `HH:mm` format. Must be greater than `start`.",
            "example": "17:00"
          },
          "date": {
            "type": "string",
            "description": "Day on which to schedule a task. In [ISO 8601 date format](https://en.wikipedia.org/wiki/ISO_8601).",
            "example": "2023-07-15"
          },
          "priority": {
            "type": "string",
            "description": "Priority of a task. Possible values: `\"low\", \"medium\", \"high\"`",
            "enum": ["low", "medium", "high"],
            "example": "medium"
          },
          "category": {
            "type": "string",
            "enum": ["to-do", "in-progress", "done"],
            "description": "The category of a task. Possible values: `\"to-do\", \"in-progress\", \"done\"`",
            "example": "to-do"
          },
          "owner": {
            "type": "string",
            "description": "The owner of a task.",
            "example": "John Doe"
          }
        }
      },

      "unauthorizedResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Unauthorized"
        }
      },

      "updateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of a task.",
            "example": "New Task"
          },
          "start": {
            "type": "string",
            "description": "Start time. In `HH:mm` format.",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "End time. In `HH:mm` format. Must be greater than `start`.",
            "example": "17:00"
          },
          "date": {
            "type": "string",
            "description": "Day on which to schedule a task. In [ISO 8601 date format](https://en.wikipedia.org/wiki/ISO_8601).",
            "example": "2023-07-15"
          },
          "priority": {
            "type": "string",
            "description": "Priority of a task. Possible values: `\"low\", \"medium\", \"high\"`",
            "enum": ["low", "medium", "high"],
            "example": "medium"
          },
          "category": {
            "type": "string",
            "enum": ["to-do", "in-progress", "done"],
            "description": "The category of a task. Possible values: `\"to-do\", \"in-progress\", \"done\"`",
            "example": "to-do"
          }
        }
      },

      "createReviewRequest": {
        "type": "object",
        "required": ["rating", "required"],
        "properties": {
          "rating": {
            "type": "number",
            "description": "Rating."
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "GooseTrack the best!"
          }
        }
      },

      "createReviewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "integer"
              },
              "comment": {
                "type": "string",
                "description": "Comment",
                "example": "GooseTrack the best!"
              },
              "owner": {
                "type": "string",
                "example": "1346464sdasd48464asd"
              },
              "_id": {
                "type": "string",
                "example": "aasdfdfd77979797sd9f797sdf"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-06-09T22:43:06.511Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-06-09T22:43:06.511Z"
              }
            }
          }
        }
      },

      "badRequestResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Bad Request."
        }
      },

      "getReviewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "integer"
                },
                "_id": {
                  "type": "string",
                  "example": "aasdfdfd77979797sd9f797sdf",
                  "description": "Review ID"
                },
                "comment": {
                  "type": "string",
                  "description": "Comment",
                  "example": "GooseTrack the best!"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "aasdfdfd77979797sd9f797sdf",
                      "description": "User ID"
                    },
                    "name": {
                      "type": "string",
                      "example": "Goose",
                      "description": "User Name"
                    },
                    "avatarURL": {
                      "type": "string",
                      "example": "https://stig89.github.io/GooseTrack-frontend/static/media/GooseLogo@2x.3c0470b19aa18aaef0d8.png"
                    }
                  }
                }
              }
            }
          }
        }
      },

      "getOneReviewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of request",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "integer"
              },
              "_id": {
                "type": "string",
                "example": "aasdfdfd77979797sd9f797sdf",
                "description": "Review ID"
              },
              "comment": {
                "type": "string",
                "description": "Comment",
                "example": "GooseTrack the best!"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "aasdfdfd77979797sd9f797sdf",
                    "description": "User ID"
                  },
                  "name": {
                    "type": "string",
                    "example": "Goose",
                    "description": "User Name"
                  },
                  "avatarURL": {
                    "type": "string",
                    "example": "https://stig89.github.io/GooseTrack-frontend/static/media/GooseLogo@2x.3c0470b19aa18aaef0d8.png"
                  }
                }
              }
            }
          }
        }
      },

      "updateReviewRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "Rating."
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "GooseTrack the best!"
          }
        }
      },

      "createTaskResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "start": {
              "type": "string"
            },
            "end": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "priority": {
              "type": "string",
              "enum": ["low", "medium", "high"]
            },
            "category": {
              "type": "string",
              "enum": ["to-do", "in-progress", "done"]
            },
            "owner": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "example": {
          "_id": "1",
          "title": "Task 1",
          "start": "09:00",
          "end": "10:00",
          "date": "2023-06-10T00:00:00Z",
          "priority": "medium",
          "category": "to-do",
          "owner": "john@example.com",
          "createdAt": "2023-06-09T14:30:00Z",
          "updatedAt": "2023-06-09T15:45:00Z"
        }
      },

      "notFoundResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Not found"
        }
      },

      "forbiddenResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Forbidden"
        }
      },

      "unprocessableResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Email is required"
        }
      },

      "conflictResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Conflict"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
